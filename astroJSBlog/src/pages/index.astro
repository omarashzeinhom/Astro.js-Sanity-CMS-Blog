---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Header from "../components/Header.astro";
import NavigationBar from "../components/NavigationBar.astro";

import { useSanityClient } from "astro-sanity";
import { urlForImage } from "../sanity/urlForImage";

// Articles
const articlesQuery = `*[_type == "articles"]`;
const articles = await useSanityClient().fetch(articlesQuery);
// console.log(firstPostB);
let articleString = JSON.stringify(articles);

// TODO Handle categories.filter()

// DISPLAY ARTICLES according to categories

---

<Layout title="ANDGOEDU Blog">
  <Header />
  <NavigationBar />
  <main>
    <p>Welcome to ANDGOEDU Blog</p>
  </main>

  
  <hr />

  <h3>Articles</h3>
  {
    articles.map(
      (article: {
        title: string;
        articleBody: string;
        articleImage: any;
        _createdAt: Date;
        articleSlug: string;
        articleAuthor: unknown;
        categories: string;
      }) => (
        <div>
          <section>
            <h2>
              <a href={`article/${article?.articleSlug?.current}`}>
                {article?.title}
              </a>
            </h2>

            <p>{article?.articleBody}</p>

            <img
              width="150"
              height="150"
              style="border-radius: 90%;"
              src={urlForImage(article?.articleImage)}
            />

            <small>
              {article?._createdAt}
              <br />
              {article?.articleSlug?.current}
              <br />
            </small>
            <button>
                {article?.categories}
            </button>
          </section>
        </div>
      )
    )
  }

  <Card title="Welcome" href="/" body="Home" />
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 60ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
