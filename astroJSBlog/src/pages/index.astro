---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import { useSanityClient } from "astro-sanity";
import { urlForImage } from "../sanity/urlForImage";

const categoriesQuery = `*[_type == "categories"]`;
const categories = await useSanityClient().fetch(categoriesQuery);
//console.log(firstPost);
let categoryString = JSON.stringify(categories);
//
const articlesQuery = `*[_type == "articles"]`;
const articles = await useSanityClient().fetch(articlesQuery);
//console.log(firstPostB);
let articleString = JSON.stringify(articles);

// pass the query as props
---

<Layout title="ANDGOEDU Blog">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>My blog</title>
  </head>

  <main>
    <p>Welcome to ANDGOEDU Blog</p>
  </main>

  <hr />
  <h2>Categories</h2>
  {
    categories.map((category) => (
      <div>
        <button>
          <a href={`/article/${category?.categoryTitle}`}>
            {category?.categoryTitle}
          </a>
        </button>
        <h4>
          Slug
          {category?.categorySlug}
        </h4>
      </div>
    ))
  }
  <hr />

  <h3>Articles</h3>
  {
    articles.map((article) => (
      <div>
        <section>
          <h2>
            {article?.title}
            <a href={`./article/${article?.title}`}>Link Test</a>
          </h2>

          <p>{article?.articleBody}</p>

          <img
            width="150"
            height="150"
            style="border-radius: 90%;"
            src={urlForImage(article?.articleImage)}
          />

          <small>
            {article?._createdAt}
            {article?.slug}
            {article?.articleAuthor}
          </small>
          <button>
            <a href={`./article/${article?.categories}`}>
              {article?.categories}
            </a>
          </button>
        </section>
      </div>
    ))
  }

  <Card title="Welcome" href="/" body="Home" />
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 60ch;
  }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
